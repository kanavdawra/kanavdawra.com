{"id":254,"date":"2021-12-05T01:47:03","date_gmt":"2021-12-05T01:47:03","guid":{"rendered":"https:\/\/kanavdawra.com\/?p=254"},"modified":"2021-12-05T01:47:06","modified_gmt":"2021-12-05T01:47:06","slug":"a-gentle-explanation-to-image-segmentation-unet","status":"publish","type":"post","link":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/","title":{"rendered":"A Gentle Explanation to Image Segmentation &#8211; UNet"},"content":{"rendered":"\n<p>In the subfield of deep learning CNN or Convolutional Neural Network most commonly used for computer vision tasks like:<\/p>\n\n\n\n<ul><li>Image Classification<\/li><li>Image Segmentation<\/li><li>Object Detection<\/li><\/ul>\n\n\n\n<p>etc.<\/p>\n\n\n\n<p>Here as the title suggests we will learn about image segmentation.<\/p>\n\n\n\n<p>So how is image segmentation different from image classification and object detection. As we know in image classification we classify images of for e.g. cats and dogs, In object detection we train our model to detect the placement of objects in our e.g. cats and dogs in the image, but in image segmentation, we are classifying every pixel in the image.<\/p>\n\n\n\n<p>Image Segmentation is of two kinds:<\/p>\n\n\n\n<ul><li>Semantic Segmentation<\/li><li>Instance segmentation<\/li><\/ul>\n\n\n\n<p>we here will learn about Semantic Segmentation<\/p>\n\n\n\n<p>Let&#8217;s start with the topic<\/p>\n\n\n\n<hr class=\"wp-block-separator\"\/>\n\n\n\n<h3 class=\"wp-block-heading\">Semantic Segmentation<\/h3>\n\n\n\n<p>Semantic Segmentation classifies every pixel in the image as shown in the image below<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"306\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan-1024x306.png\" alt=\"\" class=\"wp-image-255\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan-1024x306.png 1024w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan-300x90.png 300w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan-768x230.png 768w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan-800x239.png 800w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_semantic_instance_comparisan.png 1033w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><figcaption>Source: <a href=\"https:\/\/i.stack.imgur.com\/MEB9F.png\">https:\/\/i.stack.imgur.com\/MEB9F.png<\/a><\/figcaption><\/figure>\n\n\n\n<p>As we can see semantic segmentation classifies every object but instance segmentation goes much deeper for more information please stay tuned I will write a blog on Instance Segmentation in future<\/p>\n\n\n\n<p>Let&#8217;s look at the dataset that we will be working on, I found this <a href=\"https:\/\/www.kaggle.com\/rajkumarl\/people-clothing-segmentation\">dataset<\/a> on Kaggle by <a href=\"https:\/\/www.kaggle.com\/rajkumarl\">Rajkumar Lakshmanamoorthy<\/a>, this dataset is the dataset that segments clothing on people.<\/p>\n\n\n\n<p>let&#8217;s look at first image<\/p>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"550\" height=\"825\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_image.png\" alt=\"\" class=\"wp-image-256\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_image.png 550w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_image-200x300.png 200w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_image-373x560.png 373w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_image-140x210.png 140w\" sizes=\"(max-width: 550px) 100vw, 550px\" \/><figcaption>Image<\/figcaption><\/figure>\n<\/div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"550\" height=\"825\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_mask.png\" alt=\"\" class=\"wp-image-257\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_mask.png 550w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_mask-200x300.png 200w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_mask-373x560.png 373w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_data_mask-140x210.png 140w\" sizes=\"(max-width: 550px) 100vw, 550px\" \/><figcaption>Mask<\/figcaption><\/figure>\n\n\n\n<p><\/p>\n<\/div>\n<\/div>\n\n\n\n<p>We have multiple classes in total of 59, let&#8217;s see what those are<\/p>\n\n\n\n<div class=\"wp-block-columns is-layout-flex wp-container-core-columns-is-layout-2 wp-block-columns-is-layout-flex\">\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<ol><li>NaN<\/li><li>accessories<\/li><li>bag<\/li><li>belt<\/li><li>blazer<\/li><li>blouse<\/li><li>bodysuit<\/li><li>boots<\/li><li>bra<\/li><li>bracelet<\/li><li>cape<\/li><li>cardigan<\/li><li>clogs<\/li><li>coat<\/li><li>dress<\/li><li>earrings<\/li><li>flats<\/li><li>glasses<\/li><li>gloves<\/li><li>hair<\/li><li>hat<\/li><li>heels<\/li><li>hoodie<\/li><li>intimate<\/li><li>jacket<\/li><li>jeans<\/li><li>jumper<\/li><li>leggings<\/li><li>loafers<\/li><\/ol>\n<\/div>\n\n\n\n<div class=\"wp-block-column is-layout-flow wp-block-column-is-layout-flow\">\n<ol start=\"30\"><li>necklace<\/li><li>panties<\/li><li>pants<\/li><li>pumps<\/li><li>purse<\/li><li>ring<\/li><li>romper<\/li><li>sandals<\/li><li>scarf<\/li><li>shirt<\/li><li>shoes<\/li><li>shorts<\/li><li>skin<\/li><li>skirt<\/li><li>sneakers<\/li><li>socks<\/li><li>stockings<\/li><li>suit<\/li><li>sunglasses<\/li><li>sweater<\/li><li>sweatshirt<\/li><li>swimwear<\/li><li>t-shirt<\/li><li>tie<\/li><li>tights<\/li><li>top<\/li><li>vest<\/li><li>wallet<\/li><li>watch<\/li><li>wedges<\/li><\/ol>\n<\/div>\n<\/div>\n\n\n\n<p>NaN means not classified in this case background<\/p>\n\n\n\n<hr class=\"wp-block-separator\"\/>\n\n\n\n<h4 class=\"wp-block-heading\">Dataset Prepration<\/h4>\n\n\n\n<p>We need to create a data pipeline using <code>tf.data.Dataset<\/code> and using openCV to preprocess the Image<\/p>\n\n\n\n<p>But first let&#8217;s just read everything from the CSV and create Train, Validation and Test datasets<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">labels=pd.read_csv(r'..\/Data' + r'\/labels.csv')\nimages = os.listdir(r'..\/Data' + r'\/png_images\/IMAGES')\nmasks = os.listdir(r'..\/Data' + r'\/png_masks\/MASKS')\n\ndf=pd.DataFrame({'images':images,'masks':masks})\ndf.images=r'..\/Data\/png_images\/IMAGES\/'+df.images\ndf.masks=r'..\/Data\/png_masks\/MASKS\/'+df.masks\n\ntrain,test=train_test_split(df,test_size=.05,random_state=42)\ntrain,valid=train_test_split(train,test_size=.05,random_state=42)\n\ntrain.reset_index(drop=True,inplace=True)\ntest.reset_index(drop=True,inplace=True)\nvalid.reset_index(drop=True,inplace=True)<\/pre>\n\n\n\n<p>Now that we have created all the paths and split them into datasets we can prepare the images<\/p>\n\n\n\n<h5 class=\"wp-block-heading\">Reading Images and Masks<\/h5>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">def get_image(path):\n    image=cv2.imread(path,cv2.IMREAD_COLOR)\n    image = cv2.resize(image,(config.width,config.height))\n    image=image\/255\n    image = image.astype(np.float32)\n    return image\n\ndef get_mask(path):\n    mask = cv2.imread(path,cv2.IMREAD_GRAYSCALE)\n    mask = cv2.resize(mask,(config.width,config.height))\n    mask = mask.astype(np.int32)\n\n    return mask<\/pre>\n\n\n\n<p>In <code>get_image()<\/code> I am reading the image then resizing it to 128X128 pixels then normalising then and converting it to float32<\/p>\n\n\n\n<p>In <code>get_mask()<\/code> I am reading the mask as grayscale then resizing it to 128X128 pixels and converting it to int32, I am not normalising the mask because i need to one-hot encode the NumPy array because we are dealing will multiclass segmentation  <\/p>\n\n\n\n<h5 class=\"wp-block-heading\">Image Preprocessing<\/h5>\n\n\n\n<p>Now I am doing the one-hot encoding using tf.one_hot i wrapped the whole thing in a TensorFlow function to use as a TensorFlow operation.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">def preprocess_image_and_mask(image_path,mask_path):\n    def get_data(image_path, mask_path):\n        image_path=str(image_path,'utf-8')\n        mask_path=str(mask_path,'utf-8')\n        image = get_image(image_path)\n        mask = get_mask(mask_path)\n\n        return image,mask\n\n    image, mask=tf.numpy_function(get_data,[image_path,mask_path],[tf.float32,tf.int32])\n    mask = tf.one_hot(mask, config.num_classes, dtype=tf.float32)\n    image.set_shape([config.width,config.height, 3])\n    mask.set_shape([config.width,config.height, config.num_classes])\n    return image,mask<\/pre>\n\n\n\n<p>After this, I am creating the data pipeline using <code>tf.data.Dataset<\/code><\/p>\n\n\n\n<h5 class=\"wp-block-heading\">Data Pipeline<\/h5>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">def dataset(image_paths,mask_paths):\n    dataset=tf.data.Dataset.from_tensor_slices((image_paths,mask_paths))\n    dataset=dataset.map(preprocess_image_and_mask,num_parallel_calls=tf.data.AUTOTUNE).batch(config.batch_size).cache().prefetch(tf.data.AUTOTUNE)\n    return dataset<\/pre>\n\n\n\n<p>Now we are done with the dataset let&#8217;s look at the model architecture<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Model<\/h4>\n\n\n\n<p>Here we will use UNet for our image segmentation, UNet was originally created for medical image segmentation but it works really well with other kinds of image segmentation tasks. <\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"682\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-1024x682.png\" alt=\"\" class=\"wp-image-258\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-1024x682.png 1024w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-300x200.png 300w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-768x512.png 768w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-1536x1023.png 1536w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture-800x533.png 800w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_u-net-architecture.png 1555w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><figcaption>Source: https:\/\/lmb.informatik.uni-freiburg.de\/people\/ronneber\/u-net\/u-net-architecture.png<\/figcaption><\/figure>\n\n\n\n<p>Here the values of blocks are different but the architecture essentially is the same<\/p>\n\n\n\n<p>UNet contains Encoder, Bridge and Decoder block.<\/p>\n\n\n\n<ul><li>Encoder &#8211; Downsample the image<\/li><li>Bridge &#8211; Connects Encoder and Decoder Block<\/li><li>Decoder &#8211; Upsamples the image<\/li><\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">def conv_block(inputs, filters, pool=True):\n    x = Conv2D(filters, 3, padding=\"same\")(inputs)\n    x = BatchNormalization()(x)\n    x = Activation(\"relu\")(x)\n    x = tf.keras.layers.Dropout(.3)(x)\n    x = Conv2D(filters, 3, padding=\"same\")(x)\n    x = BatchNormalization()(x)\n    x = Activation(\"relu\")(x)\n    x = tf.keras.layers.Dropout(.3)(x)\n    if pool == True:\n        p = MaxPool2D((2, 2))(x)\n        return x, p\n    else:\n        return x\ndef build_unet(shape, num_classes):\n    inputs = Input(shape)\n\n    \"\"\" Encoder \"\"\"\n    x1, p1 = conv_block(inputs, 16, pool=True)\n    x2, p2 = conv_block(p1, 32, pool=True)\n    x3, p3 = conv_block(p2, 48, pool=True)\n    x4, p4 = conv_block(p3, 64, pool=True)\n\n    \"\"\" Bridge \"\"\"\n    b1 = conv_block(p4, 128, pool=False)\n\n    \"\"\" Decoder \"\"\"\n    u1 = UpSampling2D((2, 2), interpolation=\"bilinear\")(b1)\n    c1 = Concatenate()([u1, x4])\n    x5 = conv_block(c1, 64, pool=False)\n    x5 = tf.keras.layers.Dropout(.3)(x5)\n\n    u2 = UpSampling2D((2, 2), interpolation=\"bilinear\")(x5)\n    c2 = Concatenate()([u2, x3])\n    x6 = conv_block(c2, 48, pool=False)\n    x6 = tf.keras.layers.Dropout(.3)(x6)\n\n    u3 = UpSampling2D((2, 2), interpolation=\"bilinear\")(x6)\n    c3 = Concatenate()([u3, x2])\n    x7 = conv_block(c3, 32, pool=False)\n    x7 = tf.keras.layers.Dropout(.3)(x7)\n\n    u4 = UpSampling2D((2, 2), interpolation=\"bilinear\")(x7)\n    c4 = Concatenate()([u4, x1])\n    x8 = conv_block(c4, 16, pool=False)\n    x8 = tf.keras.layers.Dropout(.3)(x8)\n\n    \"\"\" Output layer \"\"\"\n    output = Conv2D(num_classes, 1, padding=\"same\", activation=\"softmax\")(x8)\n\n    return Model(inputs, output)<\/pre>\n\n\n\n<p>Now let&#8217;s see what kind of loss function optimisers and metrics are used<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">weights = [0.0169491525423729]*59\ndice_loss= sm.losses.DiceLoss(class_weights=weights)\nfocal_loss = sm.losses.CategoricalFocalLoss()\ntotal_loss= dice_loss+(1*focal_loss)\n\nmodel=md.build_unet((128,128,3),59)\nmodel.compile(optimizer=tfa.optimizers.RectifiedAdam(learning_rate=3e-3 ),loss=total_loss, metrics=[sm.metrics.IOUScore()])<\/pre>\n\n\n\n<p>Here I use RectifiedAdam which is a little bit different from Adam but Adam is also fine you can read more about it on the TensorFlow website. For metrics, I used IoU score which go-to for image segmentation tasks and especially if the classes are imbalanced.<\/p>\n\n\n\n<p>Next for loss, I use a combination of dice loss and focal loss. I used the <a rel=\"noreferrer noopener\" href=\"https:\/\/github.com\/qubvel\/segmentation_models\" target=\"_blank\">segmentation-models<\/a> library for loss and metrics<\/p>\n\n\n\n<p>Now let&#8217;s do a sanity check, always always do a sanity check for your models<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Visualisation and Sanity Check<\/h4>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">def get_predicted_mask(image):\n    prediction=model.predict(image)\n    prediction=np.argmax(prediction,axis=-1)\n    return prediction\n\ndef show_plots(data):\n    _, ax = plt.subplots(3,3 , figsize=(16,16))\n    for image,mask in data.take(1):\n\n        for i in range(3):\n            plt.subplot(3,3,i+1)\n            img = image[i]\n            Tmsk = np.argmax(mask[i],axis=-1)\n            Pmsk = get_predicted_mask(image)\n\n            ax[i, 0].imshow(img, cmap=\"gray\")\n            ax[i, 0].set_title('Image')\n            ax[i, 0].axis(\"off\")\n\n            ax[i, 1].imshow(Tmsk, cmap=\"gray\")\n            ax[i, 1].set_title('Image')\n            ax[i, 1].axis(\"off\")\n\n            ax[i, 2].imshow(Pmsk[i], cmap=\"gray\")\n            ax[i, 2].set_title('Image')\n            ax[i, 2].axis(\"off\")<\/pre>\n\n\n\n<p>Since prediction will be probabilities we needed to use <code>np.argmax<\/code> to convert the probabilities to 2D vector<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"800\" height=\"759\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check.png\" alt=\"\" class=\"wp-image-259\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check.png 800w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check-300x285.png 300w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check-768x729.png 768w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check-590x560.png 590w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_sanity_check-221x210.png 221w\" sizes=\"(max-width: 800px) 100vw, 800px\" \/><\/figure>\n\n\n\n<p>Seems like our model is ready to train<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Model Training<\/h4>\n\n\n\n<p>I will be using TensorBorad to visualize experiments.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">tb_callback=tf.keras.callbacks.TensorBoard(log_dir='logs\/',histogram_freq=1)\nmodel.fit(train_ds,validation_data=valid_ds,epochs=100 ,callbacks=[tb_callback])<\/pre>\n\n\n\n<p>I am training it for 100 epochs with a batch size of 16, for my hardware, it takes 10s for each epoch<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"260\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training-1024x260.png\" alt=\"\" class=\"wp-image-260\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training-1024x260.png 1024w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training-300x76.png 300w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training-768x195.png 768w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training-800x203.png 800w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_model_training.png 1309w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<h4 class=\"wp-block-heading\">Prediction<\/h4>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"774\" height=\"763\" src=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction.png\" alt=\"\" class=\"wp-image-261\" srcset=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction.png 774w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction-300x296.png 300w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction-768x757.png 768w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction-568x560.png 568w, https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_prediction-213x210.png 213w\" sizes=\"(max-width: 774px) 100vw, 774px\" \/><\/figure>\n\n\n\n<p>After evaluating the model I am not getting good enough prediction and according to me, it is because I do not have sufficient data to train my model on. But if you guys can get more accuracy please comment below I would love to talk to you more about your techniques.<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Github Repository<\/h4>\n\n\n\n<p><a href=\"https:\/\/github.com\/kanavdawra\/Clothing-Segmentation.git\">https:\/\/github.com\/kanavdawra\/Clothing-Segmentation.git<\/a><\/p>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>In the subfield of deep learning CNN or Convolutional Neural Network most commonly used for computer vision tasks like: Image Classification Image Segmentation Object Detection etc. Here as the title suggests we will learn about image segmentation. So how is image segmentation different from image classification and object detection. As we know in image classification [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":262,"comment_status":"open","ping_status":"open","sticky":false,"template":"single.php","format":"standard","meta":{"spay_email":"","footnotes":""},"categories":[3],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v21.8 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra\" \/>\n<meta property=\"og:description\" content=\"In the subfield of deep learning CNN or Convolutional Neural Network most commonly used for computer vision tasks like: Image Classification Image Segmentation Object Detection etc. Here as the title suggests we will learn about image segmentation. So how is image segmentation different from image classification and object detection. As we know in image classification [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/\" \/>\n<meta property=\"og:site_name\" content=\"Kanav Dawra\" \/>\n<meta property=\"article:published_time\" content=\"2021-12-05T01:47:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-12-05T01:47:06+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_thumbnail.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1280\" \/>\n\t<meta property=\"og:image:height\" content=\"720\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"kanavdawra_admin-716\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"kanavdawra_admin-716\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/\",\"url\":\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/\",\"name\":\"A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra\",\"isPartOf\":{\"@id\":\"https:\/\/kanavdawra.com\/#website\"},\"datePublished\":\"2021-12-05T01:47:03+00:00\",\"dateModified\":\"2021-12-05T01:47:06+00:00\",\"author\":{\"@id\":\"https:\/\/kanavdawra.com\/#\/schema\/person\/465cae08f44cccb05b5d7c55beb512ce\"},\"breadcrumb\":{\"@id\":\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/kanavdawra.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"A Gentle Explanation to Image Segmentation &#8211; UNet\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/kanavdawra.com\/#website\",\"url\":\"https:\/\/kanavdawra.com\/\",\"name\":\"Kanav Dawra\",\"description\":\"Data Science\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/kanavdawra.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/kanavdawra.com\/#\/schema\/person\/465cae08f44cccb05b5d7c55beb512ce\",\"name\":\"kanavdawra_admin-716\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/kanavdawra.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/9ee5994c2536fd1d22469184c8b4680d?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/9ee5994c2536fd1d22469184c8b4680d?s=96&d=mm&r=g\",\"caption\":\"kanavdawra_admin-716\"},\"sameAs\":[\"https:\/\/kanavdawra.com\"],\"url\":\"https:\/\/kanavdawra.com\/author\/kanavdawra_admin-716\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/","og_locale":"en_US","og_type":"article","og_title":"A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra","og_description":"In the subfield of deep learning CNN or Convolutional Neural Network most commonly used for computer vision tasks like: Image Classification Image Segmentation Object Detection etc. Here as the title suggests we will learn about image segmentation. So how is image segmentation different from image classification and object detection. As we know in image classification [&hellip;]","og_url":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/","og_site_name":"Kanav Dawra","article_published_time":"2021-12-05T01:47:03+00:00","article_modified_time":"2021-12-05T01:47:06+00:00","og_image":[{"width":1280,"height":720,"url":"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_thumbnail.png","type":"image\/png"}],"author":"kanavdawra_admin-716","twitter_card":"summary_large_image","twitter_misc":{"Written by":"kanavdawra_admin-716","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/","url":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/","name":"A Gentle Explanation to Image Segmentation - UNet - Kanav Dawra","isPartOf":{"@id":"https:\/\/kanavdawra.com\/#website"},"datePublished":"2021-12-05T01:47:03+00:00","dateModified":"2021-12-05T01:47:06+00:00","author":{"@id":"https:\/\/kanavdawra.com\/#\/schema\/person\/465cae08f44cccb05b5d7c55beb512ce"},"breadcrumb":{"@id":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/kanavdawra.com\/blog\/a-gentle-explanation-to-image-segmentation-unet\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/kanavdawra.com\/"},{"@type":"ListItem","position":2,"name":"A Gentle Explanation to Image Segmentation &#8211; UNet"}]},{"@type":"WebSite","@id":"https:\/\/kanavdawra.com\/#website","url":"https:\/\/kanavdawra.com\/","name":"Kanav Dawra","description":"Data Science","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/kanavdawra.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/kanavdawra.com\/#\/schema\/person\/465cae08f44cccb05b5d7c55beb512ce","name":"kanavdawra_admin-716","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/kanavdawra.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/9ee5994c2536fd1d22469184c8b4680d?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/9ee5994c2536fd1d22469184c8b4680d?s=96&d=mm&r=g","caption":"kanavdawra_admin-716"},"sameAs":["https:\/\/kanavdawra.com"],"url":"https:\/\/kanavdawra.com\/author\/kanavdawra_admin-716\/"}]}},"jetpack_featured_media_url":"https:\/\/kanavdawra.com\/wp-content\/uploads\/2021\/12\/2_thumbnail.png","acf":[],"_links":{"self":[{"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/posts\/254"}],"collection":[{"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/comments?post=254"}],"version-history":[{"count":2,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/posts\/254\/revisions"}],"predecessor-version":[{"id":264,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/posts\/254\/revisions\/264"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/media\/262"}],"wp:attachment":[{"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/media?parent=254"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/categories?post=254"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/kanavdawra.com\/wp-json\/wp\/v2\/tags?post=254"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}